---

- debug:
    msg: "imported RedHat/generic/assert-tuned.yml"

- name: Report tuned version
  debug:
    msg: "INFO: The installed version of package tuned is: {{ ansible_facts.packages['tuned'][0].version }}"
  when: "'tuned' in ansible_facts.packages and
        (sap_hana_preconfigure_use_tuned or
           sap_hana_preconfigure_assert_all_config
        )"

- name: Assert that tuned is enabled
  assert:
    that:
      - ansible_facts.services['tuned.service']['status'] == 'enabled'
    fail_msg: "FAIL: Service tuned is NOT enabled!"
    success_msg: "PASS: Service tuned is enabled."
  ignore_errors: "{{ sap_hana_preconfigure_assert_ignore_errors|d(false) }}"
  when: sap_hana_preconfigure_use_tuned

- name: Assert that tuned is disabled
  assert:
    that:
      - ansible_facts.services['tuned.service']['status'] == 'disabled'
    fail_msg: "FAIL: Service tuned is not disabled!"
    success_msg: "PASS: Service tuned is disabled."
  ignore_errors: "{{ sap_hana_preconfigure_assert_ignore_errors|d(false) }}"
  when: not sap_hana_preconfigure_use_tuned

- name: Assert that tuned is active
  assert:
    that:
      - ansible_facts.services['tuned.service']['state'] == 'running'
    fail_msg: "FAIL: Service tuned is NOT active!"
    success_msg: "PASS: Service tuned is active."
  ignore_errors: "{{ sap_hana_preconfigure_assert_ignore_errors|d(false) }}"
  when: sap_hana_preconfigure_use_tuned

- name: Assert that tuned is inactive
  assert:
    that:
      - ansible_facts.services['tuned.service']['state'] == 'inactive'
    fail_msg: "FAIL: Service tuned is NOT inactive!"
    success_msg: "PASS: Service tuned is inactive."
  ignore_errors: "{{ sap_hana_preconfigure_assert_ignore_errors|d(false) }}"
  when: not sap_hana_preconfigure_use_tuned

- name: Report tuned-profiles-sap-hana version
  debug:
    msg: "INFO: The installed version of package tuned-profiles-sap-hana is: {{ ansible_facts.packages['tuned-profiles-sap-hana'][0].version }}"
  when: "'tuned-profiles-sap-hana' in ansible_facts.packages and
        (sap_hana_preconfigure_use_tuned or
           sap_hana_preconfigure_assert_all_config
        )"

- name: Get active tuned profile
  shell: /usr/sbin/tuned-adm active | grep ":" | cut -d ":" -f 2 | awk '{$1=$1;print}'
  check_mode: no
  register: current_profile
  ignore_errors: yes
  changed_when: false
  when: sap_hana_preconfigure_use_tuned or
        sap_hana_preconfigure_assert_all_config

- debug:
    var: current_profile.stdout_lines, current_profile.stderr_lines
  ignore_errors: yes
  when: sap_hana_preconfigure_use_tuned or
        sap_hana_preconfigure_assert_all_config

- name: Assert that tuned profile sap-hana is currently active for non-RHEL 8, non-ppc64le
  assert:
    that:
      - current_profile.stdout == 'sap-hana'
    fail_msg: "FAIL: The tuned profile 'sap-hana' is currently not active!
      Currently active profile: '{{ current_profile.stdout }}'."
    success_msg: "PASS: The tuned profile 'sap-hana' is currently active."
  ignore_errors: "{{ sap_hana_preconfigure_assert_ignore_errors|d(false) }}"
  when: (ansible_architecture != "ppc64le" or
          (ansible_architecture == "ppc64le" and
             ansible_distribution_version != "8.0"
          )
        ) and
        (sap_hana_preconfigure_use_tuned or
           sap_hana_preconfigure_assert_all_config
        )

- name: Assert that tuned profile sap-hana is currently active for RHEL 8 on ppc64le
  assert:
    that:
      - current_profile.stdout == 'sap-hana sap-hana-ppc64le'
    fail_msg: "FAIL: The tuned profiles 'sap-hana sap-hana-ppc64le' are currently not active!
      Currently active profile: '{{ current_profile.stdout }}'."
    success_msg: "PASS: The tuned profiles 'sap-hana sap-hana-ppc64le' are currently active."
  ignore_errors: "{{ sap_hana_preconfigure_assert_ignore_errors|d(false) }}"
  when: (ansible_architecture == "ppc64le" and
           ansible_distribution_version == "8.0"
        ) and
        (sap_hana_preconfigure_use_tuned or
           sap_hana_preconfigure_assert_all_config
        )

...
